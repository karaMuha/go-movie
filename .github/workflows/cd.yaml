name: CD

on:
  push:
    branches: [main]

jobs:
  ratings_service:
    name: Build and push ratings service image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.0"
      
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
      
      - name: Install protoc-gen-go
        run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      
      - name: Install protoc-gen-go-grpc
        run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      
      - name: Generate gRPC code
        run: make gen-pb
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      
      - name: Build and push image
        run: |
          docker build . -t ghcr.io/go-movie/ratings-service:latest -f ./rating/Dockerfile
          docker push ghcr.io/go-movie/ratings-service:latest
  
  metadata_service:
    name: Build and push metadata service image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.0"
      
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
      
      - name: Install protoc-gen-go
        run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      
      - name: Install protoc-gen-go-grpc
        run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      
      - name: Generate gRPC code
        run: make gen-pb
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      
      - name: Build and push image
        run: |
          docker build . -t ghcr.io/go-movie/metadata-service:latest -f ./metadata/Dockerfile
          docker push ghcr.io/go-movie/metadata-service:latest
  
  movie_service:
    name: Build and push movie service image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24.0"
      
      - name: Install Protoc
        uses: arduino/setup-protoc@v3
      
      - name: Install protoc-gen-go
        run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
      
      - name: Install protoc-gen-go-grpc
        run: go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      
      - name: Generate gRPC code
        run: make gen-pb
      
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}
      
      - name: Build and push image
        run: |
          docker build . -t ghcr.io/go-movie/movie-service:latest -f ./movie/Dockerfile
          docker push ghcr.io/go-movie/movie-service:latest